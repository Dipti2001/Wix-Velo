$w.onReady(function () {
    const rssUrl = 'https://rss.beehiiv.com/feeds/Rks2Tzigk8.xml';
    const apiUrl = `https://api.rss2json.com/v1/api.json?rss_url=${rssUrl}`;
    const repeaterData = [];

    let idCounter = 0;
    let itemsToDisplay = 5;

    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            const channelTitle = data.feed.title;
            const channelDescription = data.feed.description;

            console.log(`Channel Title: ${channelTitle}`);
            console.log(`Channel Description: ${channelDescription}`);

            data.items.forEach((item, index) => {
                let title = item.title || '';
                const description = item.description || '';
                const link = item.link || '';
                const pubDate = formatDate(item.pubDate) || '';
                const imageUrl = item.enclosure ? item.enclosure.link : '';
                console.log(imageUrl)

                console.log(pubDate);
                let cleanDescription = description.replace(/<\/?[^>]+(>|$)/g, "");

                if (cleanDescription.length >= 130) {
                    cleanDescription = cleanDescription.substr(0, 130) + "...";
                }

                if (title.length >= 50){
                    title = title.substr(0, 50) + "...";
                }

                const itemData = {
                    _id: `item${idCounter}`,
                    title: title,
                    cleanDescription: cleanDescription,
                    link: link,
                    pubDate: pubDate,
                    imageUrl: imageUrl
                };

                repeaterData.push(itemData);
                idCounter++;
            });

            $w('#lettersRepeater').data = repeaterData.slice(0, itemsToDisplay);
            console.log("Initial repeater data set:", $w('#lettersRepeater').data);

            $w('#lettersRepeater').onItemReady(($item, itemData, index) => {
                console.log(`Item Data at index ${index}:`, itemData);
                $item('#letterTitle').text = itemData.title;
                $item('#letterDescription').text = itemData.cleanDescription;
                $item('#letterDate').text = itemData.pubDate;
                $item('#letterImage').src = itemData.imageUrl;
            });

            $w("#loadMore").onClick(() => {
                console.log(`repeaterData length: ${repeaterData.length}`);
                console.log(`itemsDisplayed length: ${itemsToDisplay}`);

                $w("#loadMore").hide();

                if (repeaterData.length !== itemsToDisplay) {
                    itemsToDisplay += 5;
                    $w('#lettersRepeater').data = repeaterData.slice(0, itemsToDisplay);
                    console.log("Updated repeater data:", $w('#lettersRepeater').data);
                    $w("#loadMore").show();
                    
                    if (repeaterData.length <= itemsToDisplay){
                        console.log("disabled...");
                        $w("#loadMore").disable();
                    }
                }
            });
        })
        .catch(error => {
            console.error('Error fetching RSS feed:', error);
        });

    function formatDate(dateString) {
        const date = new Date(dateString);
        const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        const day = date.getDate();
        const month = months[date.getMonth()];
        const year = date.getFullYear();
        return `${month} ${day}, ${year}`;
    }
});
